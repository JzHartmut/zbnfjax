
<:subtext:copy:target>
<=inputs:$target.allInputFilesExpanded()>
<:for:input:$inputs>
...statements for each input file
   can access <*$input.file()> etc.
   or can access <*$target.params.name>
   or can access <*var.ZmakeScriptvariable>
<.for>
<.subtext>



<:subtext:testFileAccess:target>
<:>
echo testFileAccess Target: <*$target.targetName>
echo out-base=<*$target.output.basepath()>;out-local=<*$target.output.localdir()>; out-file=<*$target.output.namext()>
<.>
<=inputFiles:$target.allInputFiles()>
<:for:$input:$inputFiles>
  <:>echo base=<*$input.basepath()>; local=<*$input.localfile()>; absBase=<*$input.absbasepath()>
<.>
<.for>
<.subtext>


<:subtext:testFileAccessExp:target>
<:>
echo testFileAccessExp Target: <*$target.targetName>
echo out-base=<*$target.output.basepath()>;out-local=<*$target.output.localdir()>; out-file=<*$target.output.namext()>
<.>
<=inputFilesExpanded:$target.allInputFilesExpanded()>
<=inputFiles:$target.allInputFiles()>
<:for:$input:$inputFiles>
  <:>echo base=<*$input.basepath()>; local=<*$input.localfile()>
<.>
<.for>
<:>
echo ----------------------------------------------------------------------
echo all files expanded:
<.>
<:for:$input:$inputFilesExpanded>
  <:>echo base=<*$input.basepath()>; local=<*$input.localfile()>
<.>
<.for>
<.subtext>


<:subtext:zip:target>
<=inputs:$target.allInputFiles()>
<:>echo Zip to <*$target.output.file()>
%JAX_EXE% org.vishia.util.Zip -o:<*$target.output.file()><.><:for:$input:$inputs><:> <*$input.base_localfile()><.><.for><:>
<.>
<.subtext>


<:subtext:java2xml:target>
<=inputs:$target.allInputFilesExpanded()>
<:>echo zbnf2xml
<.>
<:for:input:$inputs>
  <:>call zbnfjax zbnf2xml -checknew -i:<*$input.absfile()> -s:%ZBNFJAX_HOME%/zbnf/Java2C.zbnf -y:<*$target.output.basepath()>/<*$input.localfile()>.xml -a:@filename=<*$input.name()> --report:%TMP_ZBNFJAX%/<*$input.localdir()>.zbnf.rpt
<.>  
<.for>
<.subtext>



<:file>
<:>
call setZBNFJAX_HOME.bat silent
<.>
<:for:$target:targets>
  ##Generate and insert the subtext for each target in the users script.
  <*subtext:$target.translator: target=$target><:>

  TTEST
  <.>  
<.for>
<:>
...some special end statements
<.>
<.file>