##Zmake generate control file for XMI-generation from header files.
##The generated script should be called with following environments:
##CURDIR the current directory as base for the relativ file names

## Note: the currDir-variable is used internally to build an absolute path with <*input.absFile>
<=currDir><*var.currdir.text()><.=>

##The only one target of this generate-script: parse the header and translate to a XML-image, Then builds XMI. */
<:subtext:genXMI:inputset, output, target>
<=inputsExpanded:$target.allInputFilesExpanded()>
REM subtext genXMI - zbnf2xml for all inputs.
<:for:$input:$inputsExpanded>
  ##checkNewless: deletes the destination file if it is older than the source. call schema: checkNewless(source, destination, deleteit);
  <:if:$!org.vishia.util.FileSystem.checkNewless($input.absfile(), $$TMP_ZBNFJAX + $input.localfile() + ".xml", 1) ?ge 1>
    <=test:$!org.vishia.zbnf.Zbnf2Xml.smain("-i:"+$input.absfile(), "-s:"+$$ZBNFJAX_HOME+"/zbnf/Java2C.zbnf"
      , "-y:"+$$TMP_ZBNFJAX + "/" + $input.localfile()+".xml", "-a:@filename="+$input.name()
      , "--report:"+$$TMP_ZBNFJAX+"/"+$input.localfile()+".zbnf.rpt", "--rlevel:335") >
  <:else>
    <:> isparsed: <*$input.localfile()>
    <.>
  <.if>
<.for>
<.subtext>




<:file>
  <:>
@echo off
if "%TMP_ZBNFJAX%" == "" set TMP_ZBNFJAX=..\..\..\tmpDocu
call setZBNFJAX_HOME.bat silent    
<.>
<:for:$target:targets>
  ##Generate and insert the subtext for each target in the users script.
  <*subtext:$target.translator: target=$target, inputset=var.inputJava, output=$target.output>
<.for>
<:>
pause
goto :ende
:error
  echo error
:ende  
<.>
<.file>

