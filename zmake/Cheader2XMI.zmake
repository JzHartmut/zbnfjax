##Zmake generate control file for XMI-generation from header files.
##The generated script should be called with following environments:
##CURDIR the current directory as base for the relativ file names

## Note: the currDir-variable is used internally to build an absolute path with <*input.absFile>
<=currDir>.<.=>

/**The only one target of this generate-script: parse the header and translate to a XML-image, Then builds XMI. */
<:target=genXMI>
<:forInput>    ##for all source files call Zbnf2XMI with Cheader.zbnf
  <=cclabel><*nextNr()><.=>  ##build a current number for labels. Note: Windows has a problem if batchfiles are written with 0a instead 0d0a (Unix-Lineend). This is reported untruly by 'label not found'.
  <:>
  if exist %TMP_ZBNFJAX%/<*input.localFile>.xml goto :<*cclabel> 
  call zbnfjax zbnf2xml -i:<*input.absFile> -s:%ZBNFJAX_HOME%/zbnf/Cheader.zbnf -y:%TMP_ZBNFJAX%/<*input.localFile>.xml "-a:@filename="<*input.name>"" --report:%TMP_ZBNFJAX%/<*input.localPath>.zbnf.rpt
  :<*cclabel>
  <.>
<.forInput>

REM All parsed headers can transform via XSLT-2 using saxon in 2 steps.
echo building XMI
echo on
%XSLT_EXE% <:forInput><:>-i%TMP_ZBNFJAX%/<*input.localFile>.xml <.><.forInput> -t%ZBNFJAX_HOME%/xsl/CheaderTypes.xsl -w+ -y%TMP_ZBNFJAX%/types-xmi.xml
%XSLT_EXE% <:forInput><:>-i%TMP_ZBNFJAX%/<*input.localFile>.xml <.><.forInput> -i%TMP_ZBNFJAX%/types-xmi.xml -t%ZBNFJAX_HOME%/xsl/gen/Cheader2Xmi.xsl -w+ -y<*output.absFile>
<:>
echo off
<.>
<.target>




<:file>
  <:>
@echo off
set TMP_ZBNFJAX=..\..\..\tmpDocu
call setZBNFJAX_HOME.bat silent    
<*target>

pause
goto :ende
:error
  echo error
:ende  
<.>
<.file>

