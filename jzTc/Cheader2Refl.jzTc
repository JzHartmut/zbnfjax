##jzTc script to generate a Reflection.crefl file from some struct of Header.
##made by Hartmut Schorrig,  


sub genReflFile(Obj struct, String headerName ) 
{
<:>
//This file is generated by zbnfjax/jzTc/GenRefl.jzTc
#include <<&headerName>>
#include <Jc/ReflectionJc.h>
#include <stddef.h>

const struct Reflection_Fields_<&struct.name>_t
{ ObjectArrayJc head;
  FieldJc data[<&struct.entries.size>];
} reflection_Fields_Address_InterProcessComm_s =
{ CONST_ObjectArrayJc(FieldJc, 5, OBJTYPE_FieldJc, null, &reflection_Fields_<&struct.name>)
, {
    <:for:entry:struct.entries><:if:entry.name><:indent:2=>
==    { "<&entry.name>"
==    , 0   //no Array, no Bitfield
==    , reflection_<&entry.type.name>
==    , 0
==    , (int16)((int32)(&((<&struct.name>*)(0x1000))-><&entry.name>) -(int32)(<&struct.name>*)0x1000)
==    , 0  //offsetToObjectifcBase
==    , &reflection_<&struct.name>
==    }
==    <:hasNext>, <.hasNext>
    <.if><.for>
  }
};

<.>
}