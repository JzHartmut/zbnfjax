<?ZBNF-www.vishia.org version="1.0" encoding="iso-8859-1" ?>
##This script describes the syntax of a Zmake-generation-control-file.

$endlineComment=\#\#.  ##The ## is the start chars for an endline-comment or commented line in the parsed script. 

ZmakeGenctrl::= 
{ <ZmakeTarget> 
| <genFile> 
| (\?= <variableAssignment?setVariable> (\?/=\?)
| \<= <variableAssign?setVariable> \<\.=\>
} \e.

##A Zmake-Script contains of targets, which are to do.
##The genControl Script determines the textual representation of some targets with the several use-able names.
##All named targets in the control script can be used as Zmake-target-name (translator name) in the users Zmake script.
##This file describes how a genControl script should be build.


ZmakeTarget::= (\?:target = <$?@name> \?) 
  <genContent?>
(\?/target\?)
| \<:target = <$?@name> \> 
  <genContent?>
\<\.target\>.


##A genControl script should have a part (?:file?)....(?/file?) which describes how the whole file should build.

genFile::= (\?:file\?)
  <genContent?>
(\?/file\?)
|\<:file\>
  <genContent?>
\<\.file\>.
  
  


##The textual content of any target, file, variable etc.

genContent::=
{ (\?= <variableAssignment?setVariable> (\?/=\?)
| \<= <variableAssign?setVariable> \<\.=\>
| (\?:forInput\?) <genContent?forInputContent> (\?/forInput\?)
| \<:forInput\> <genContent?forInputContent> \<\.forInput\>
| (\?:for : <forVariable> (\?/for\?)
| \<: for : <forVariable> \<\.for\>
| (\?:forList : <forList> (\?/forList\?)
| (\?+ <variableAssignment?addToList> (\?/+\?)
| (\?input\.<$?inputValue>\?)    
| (\?output\.<$?outputValue>\?)
| \<* <$?variableValue> \>
| \<* <$?fnEmpty>() \>
| \<* <valueElement> \>
| (\?*\?)<?listElement>
| (\?*<valueElement>\?)               ##element of the (?*for:name?)...list where name is given here.
| (\?<$?variableValue>\?)
| (\?:\?)<genContentNoWhitespace?>(\?/\?)
| \<:\><genContentNoWhitespace?>\<\.\>
| (\?:text\?)<*|(\??text>(\?/text\?)  ##text in (?:text?).....(?/text?) with all whitespaces 
| <*|(\?|\<:|\<*|\<\.?text>                        ##text after whitespace but inclusive trailing whitespaces
}.



valueElement::=<$?name>\.<$?elementPart>.

genContentNoWhitespace::=<$NoWhiteSpaces>
{ [?\<\.\>|(\?/\?)]
[ (\?input\.<$?inputValue>\?)    
| (\?output\.<$?outputValue>\?)
| (\?:forInput\?) <genContent?forInputContent> (\?/forInput\?)
| \<:forInput\> <genContent?forInputContent> \<\.forInput\>
| (\?:for : <forVariable> (\?/for\?)
| \<: for : <forVariable> \<\.for\>
| (\?*\?)<?listElement>
| (\?*<valueElement>\?)
| \<* <$?variableValue> \>
| \<* <$?fnEmpty>() \>
| \<* <valueElement> \>
| (\?<$?variableValue>\?)
| <*|(\?|\<:|\<*|\<\.?text>           ##text after whitespace but inclusive trailing whitespaces
]
}.



variableAssignment::= <$?@name> \?)<genContent?> .
variableAssign::= <$?@name> \> <genContent?> .

forVariable::= <$?@name>[\?)|\>] <genContent?> .

forList::= <$?@name>\?) <genContent?> .

