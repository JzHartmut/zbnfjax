<?ZBNF-www.vishia.de version="1.0" encoding="iso-8859-1" ?>
$xmlns:topics="http://www.vishia.de/2006/Topics".
$xmlns:xhtml="http://www.w3.org/1999/xhtml".
$inputEncodingKeyword="encoding".
$comment=/*...*/.
$endlineComment=//.

StateMachine::=      
{ #include <* \n?includeLine>
}

[ char *
{ <variable>; ? char * 
}]



{ static <*;?statefnarg>;  ##argument for each state subroutine
}


class States \{
{
  <state>
}
\} ; 
\e.

variable::= <$?name> = <""?value>.

stateStructure::={ + <CompositeState> }.


state::=
[ /**<* |\.|*/?shortdescription><* |*/?description> */] 

[public : |] class <$?@stateName>  [| : public <$?parallelParentState> | : protected  <*\{?> ]  ##after : some super states for access in C++
\{
{ int statenr_<* ;?stateNr> ;
| [class] <$?enclState> [*] parent[State] ;
| [class] <$?startState> [*] start[State] ;
| public : class History \{ \} ; <?hasHistory>
| [/**<* |\.|*/?-shortdescription><* |*/?-description> */]
  [ void entry ( )\{<action?+entry> \}
  | void exit ( ) \{<action?+exit> \}
  | void trans[<#?>]  <trans?+trans> 
  | void inState ( ) \{<action?+instate> \}
] }
\} ; 
.


action::=<*\{\}?code>[\{<action>\}].

trans::= ( 
{ bool cond = <*\{,?condP>
| bool time = <*\{,?timeP>
| class <$?joinState> [*] join [)]
? , }
\{
  <* |new?code>
  { new <$?dstState> [ :: History<?history>] [ ( )] ? , };
\}.


cond::=<*\{?cond>.
